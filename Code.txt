     {/* <Text>
          {`Window Dimensions : height- ${window.height} , width - ${window.width}`}
        </Text> */}
      {/* <View style={{
        backgroundColor: 'red',
        width: '100%',
        height: landscape ? "100%" : "30%",
      }}> </View> */}



  // Method No. 2  
  // changeStatusbarTransition = () => {
  //   const transition = TRANSITION.indexOf(statusbartransition) + 1;
  //   if (transition === TRANSITION.length) {
  //     setstatusbartransition(TRANSITION[0]);

  //   }
  //   else {
  //     setstatusbartransition(TRANSITION[transition]);
  //   }

  // }


  buttonsContainer: {
    padding: 10,
  },
  textStyle: {
    textAlign: 'center',
    marginBottom: 8,

  }



  container: {
    flex: 1,
    // paddingTop: Platform.OS === 'android' ? 20 : 0,
    backgroundColor: "#fff",

    // paddingTop: Platform.OS === 'android' ? 20 : 0,
    // paddingTop: Platform.OS === 'android' ? StatusBar.currentHeight : 0,

  },



   <View style={styles.styling}>

      </View>
      <View style={styles.styling2}>



      </View>
      <View style={styles.styling3}>

      </View>
      <View style={{
        backgroundColor: 'yellow',
        flex: 2,
      }}>


      </View>
  styling: {
    backgroundColor: 'dodgerblue',

    flex: 1,
  },
  styling2: {
    backgroundColor: 'gold',

    flex: 1,
  },
  styling3: {
    flex: 1,
    backgroundColor: 'tomato',
  }









    <SafeAreaView style={styles.container}>
      <View style={{
        backgroundColor: 'dodgerblue',
        flex: 1,
        alignItems: 'center',
        justifyContent: 'center',
        alignContent: 'center',
        flexDirection: 'row',
        // flexWrap: 'wrap'
        flexShrink: 1,

      }}>

        <View style={{
          backgroundColor: 'red',
          // width: 200,
          flexBasis: 200,
          // flexShrink: 1,
          flex: -1,
          height: 100,
        }}>
        </View>
        <View style={{
          backgroundColor: 'blue',
          width: 100,
          height: 100,

        }}>
        </View>
        <View style={{
          backgroundColor: 'orange',
          width: 100,
          height: 100,
          // flexShrink: 1,
        }}>
        </View>
      </View>
    </SafeAreaView>
    const styles = StyleSheet.create({
  container: {

    flex: 1,
    paddingTop: Platform.OS === 'android' ? StatusBar.currentHeight : 0,
  }
});




  // console.log(useDimensions())
  // const [hidden, sethidden] = useState(false);

  // const [statusbartransition, setstatusbartransition] = useState(TRANSITION[0]);
  // const changeStatusbarVisibility = () => {
  //   sethidden(!hidden);
  //   alert(hidden)
  // };


  // console.log(Dimensions.get('window'));
  // const windowWidth = Dimensions.get('window').width;
  // const heigthWidth = Dimensions.get('window').height;
// const TRANSITION = ['fade', 'slide', 'none'];


    <SafeAreaView style={styles.container}>

      <View style={styles.scree}>
        <ImageBackground style={styles.image} source={require('./assets/tomas-malik-MJ9px5L-opg-unsplash.jpg')} resizeMode="cover">

        </ImageBackground>
      </View>
    </SafeAreaView>
      container: {
    flex: 1,
    paddingTop: Platform.OS === 'android' ? StatusBar.currentHeight : 0,
  },
    image: {
    flex: 2,
  },
  scree: {
    flex: 1,
  },


  container: {
    flex: 1,
    paddingTop: Platform.OS === 'android' ? StatusBar.currentHeight : 0,
    justifyContent:'center',
    alignItems:'center',

  },
bor : {
  width:100,
  height:100,
  backgroundColor:'red',
  borderWidth : 10,
  borderColor:'yellow',
  borderRadius:20,
  borderTopWidth:30,
  borderTopLeftRadius:50,
  elevation:40,
  shadowColor:'black',
  shadowOffset: {width : 20 , height : 10},
  shadowOpacity:1,
}

<>
<Text style={styles.sty2}>{children}</Text>

</>
    sty2 : {
       
        color: "tomato",
        ...Platform.select({
            ios: {
                fontSize :20,
                fontFamily :  "Avenir",
               },
            android : {
                fontSize :30,
                fontFamily : "Roboto"
            }
        })
    }
    // materialIcon
   <>

